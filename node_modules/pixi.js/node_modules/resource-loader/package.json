{
  "name": "resource-loader",
  "version": "1.6.4",
  "main": "./src/index.js",
  "description": "A generic asset loader, made with web games in mind.",
  "author": {
    "name": "Chad Engler",
    "email": "chad@pantherdev.com"
  },
  "license": "ISC",
  "homepage": "https://github.com/englercj/asset-loader",
  "repository": {
    "type": "git",
    "url": "https://github.com/englercj/asset-loader.git"
  },
  "bugs": {
    "url": "https://github.com/englercj/asset-loader/issues"
  },
  "keywords": [],
  "scripts": {
    "test": "gulp && testem ci",
    "build": "gulp build",
    "docs": "jsdoc -c ./gulp/util/jsdoc.conf.json"
  },
  "dependencies": {
    "async": "^0.9.0",
    "eventemitter3": "^1.1.0"
  },
  "devDependencies": {
    "browserify": "^10.2.0",
    "chai": "^2.3.0",
    "del": "^1.1.0",
    "gulp": "^3.8.11",
    "gulp-cached": "^1.1.0",
    "gulp-jshint": "^1.10.0",
    "gulp-mocha": "^2.0.1",
    "gulp-plumber": "^1.0.0",
    "gulp-rename": "^1.2.2",
    "gulp-uglify": "^1.2.0",
    "gulp-util": "^3.0.4",
    "ink-docstrap": "^0.5.2",
    "jsdoc": "^3.3.0",
    "jshint-summary": "^0.4.0",
    "require-dir": "^0.3.0",
    "run-sequence": "^1.1.0",
    "sinon": "^1.14.1",
    "sinon-chai": "^2.7.0",
    "testem": "^0.8.3",
    "vinyl-buffer": "^1.0.0",
    "vinyl-source-stream": "^1.1.0",
    "watchify": "^3.2.1"
  },
  "readme": "# Resource Loader [![Build Status](https://travis-ci.org/englercj/resource-loader.svg?branch=master)](https://travis-ci.org/englercj/resource-loader)\n\nA generic resource loader, made with web games in mind.\n\n## Usage\n\n```js\n// ctor\nvar loader = new Loader();\n\nloader\n    // chainable `add` to enqueue a resource\n    .add(name, url, options)\n\n    // chainable `before` to add a middleware that runs for each resource, *before* loading a resource.\n    // this is useful to implement custom caching modules (using filesystem, indexeddb, memory, etc).\n    .before(cachingMiddleware);\n\n    // chainable `after` to add a middleware that runs for each resource, *after* loading a resource.\n    // this is useful to implement custom parsing modules (like spritesheet parsers, spine parser, etc).\n    .after(parsingMiddleware);\n\n\n    // `load` method loads the queue of resources, and calls the passed in callback called once all\n    // resources have loaded.\n    .load(function (loader, resources) {\n        // resources is an object where the key is the name of the resource loaded and the value is the resource object.\n        // They have a couple default properties:\n        // - `url`: The URL that the resource was loaded from\n        // - `error`: The error that happened when trying to load (if any)\n        // - `data`: The raw data that was loaded\n        // also may contain other properties based on the middleware that runs.\n    });\n\n// throughout the process multiple events can happen.\nloader.on('progress', ...); // called once per loaded/errored file\nloader.on('error', ...); // called once per errored file\nloader.on('load', ...); // called once per loaded file\nloader.on('complete', ...); // called once when the queued resources all load.\n```\n\n## Building\n\nYou will need to have [node][node] and [gulp][gulp] setup on your machine.\n\nThen you can install dependencies and build:\n\n```js\nnpm i && npm run build\n```\n\nThat will output the built distributables to `./dist`.\n\n[node]:       http://nodejs.org/\n[gulp]:       http://gulpjs.com/\n\n## Supported Browsers\n\n- IE 10+\n- FF 13+\n- Chrome 20+\n- Safari 6+\n- Opera 12.1+\n\n## To Do:\n\n- IE 9 support\n",
  "readmeFilename": "README.md",
  "_id": "resource-loader@1.6.4",
  "dist": {
    "shasum": "a1bb93679e17ecbc1fb8355b492f60493e931df4"
  },
  "_from": "resource-loader@^1.6.4",
  "_resolved": "https://registry.npmjs.org/resource-loader/-/resource-loader-1.6.4.tgz"
}
